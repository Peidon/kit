// Code generated from valuate.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type valuateLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var valuatelexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func valuatelexerLexerInit() {
	staticData := &valuatelexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'%'", "'!'", "'0'", "'true'", "'false'", "'nil'", "'('", "')'",
		"'{'", "'}'", "'['", "']'", "','", "':'", "'.'", "'||'", "'&&'", "'=='",
		"'!='", "'<'", "'<='", "'>'", "'>='", "'/'", "'+'", "'-'", "'*'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "TRUE", "FALSE", "NIL_LIT", "LP", "RP", "L_CURLY", "R_CURLY",
		"L_BRACKET", "R_BRACKET", "COMMA", "COLON", "DOT", "LOGICAL_OR", "LOGICAL_AND",
		"EQUALS", "NOT_EQUALS", "LESS", "LESS_OR_EQUALS", "GREATER", "GREATER_OR_EQUALS",
		"DIV", "PLUS", "MINUS", "STAR", "SKIP_", "WHITESPACE", "IDENTIFIER",
		"VAR_ID", "STRING", "STRING_LITERAL", "BYTES_LITERAL", "DECIMAL_LIT",
		"FLOAT_NUMBER",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "TRUE", "FALSE", "NIL_LIT", "LP", "RP", "L_CURLY",
		"R_CURLY", "L_BRACKET", "R_BRACKET", "COMMA", "COLON", "DOT", "LOGICAL_OR",
		"LOGICAL_AND", "EQUALS", "NOT_EQUALS", "LESS", "LESS_OR_EQUALS", "GREATER",
		"GREATER_OR_EQUALS", "DIV", "PLUS", "MINUS", "STAR", "SKIP_", "WHITESPACE",
		"IDENTIFIER", "VAR_ID", "STRING", "STRING_LITERAL", "BYTES_LITERAL",
		"DECIMAL_LIT", "FLOAT_NUMBER", "LETTER", "NON_ZERO_DIGIT", "DIGIT",
		"OCT_DIGIT", "HEX_DIGIT", "BIN_DIGIT", "POINT_FLOAT", "EXPONENT_FLOAT",
		"INT_PART", "FRACTION", "EXPONENT", "SHORT_BYTES", "LONG_BYTES", "LONG_BYTES_ITEM",
		"SHORT_BYTES_CHAR_NO_SINGLE_QUOTE", "SHORT_BYTES_CHAR_NO_DOUBLE_QUOTE",
		"LONG_BYTES_CHAR", "BYTES_ESCAPE_SEQ", "SPACES", "LINE_JOINING", "ESC",
		"UNICODE", "SAFECODEPOINT", "HEX",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 36, 406, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2,
		1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10,
		1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1,
		15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18,
		1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1,
		23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 3, 27,
		193, 8, 27, 1, 27, 1, 27, 1, 28, 4, 28, 198, 8, 28, 11, 28, 12, 28, 199,
		1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 5, 29, 207, 8, 29, 10, 29, 12, 29, 210,
		9, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 5, 30, 217, 8, 30, 10, 30, 12,
		30, 220, 9, 30, 1, 30, 1, 30, 1, 30, 3, 30, 225, 8, 30, 1, 31, 1, 31, 1,
		31, 3, 31, 230, 8, 31, 1, 32, 1, 32, 1, 32, 5, 32, 235, 8, 32, 10, 32,
		12, 32, 238, 9, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 3,
		33, 247, 8, 33, 1, 33, 1, 33, 3, 33, 251, 8, 33, 1, 34, 1, 34, 5, 34, 255,
		8, 34, 10, 34, 12, 34, 258, 9, 34, 1, 35, 1, 35, 3, 35, 262, 8, 35, 1,
		36, 3, 36, 265, 8, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40,
		1, 40, 1, 41, 1, 41, 1, 42, 3, 42, 278, 8, 42, 1, 42, 1, 42, 1, 42, 1,
		42, 3, 42, 284, 8, 42, 1, 43, 1, 43, 3, 43, 288, 8, 43, 1, 43, 1, 43, 1,
		44, 4, 44, 293, 8, 44, 11, 44, 12, 44, 294, 1, 45, 1, 45, 4, 45, 299, 8,
		45, 11, 45, 12, 45, 300, 1, 46, 1, 46, 3, 46, 305, 8, 46, 1, 46, 4, 46,
		308, 8, 46, 11, 46, 12, 46, 309, 1, 47, 1, 47, 1, 47, 5, 47, 315, 8, 47,
		10, 47, 12, 47, 318, 9, 47, 1, 47, 1, 47, 1, 47, 1, 47, 5, 47, 324, 8,
		47, 10, 47, 12, 47, 327, 9, 47, 1, 47, 3, 47, 330, 8, 47, 1, 48, 1, 48,
		1, 48, 1, 48, 1, 48, 5, 48, 337, 8, 48, 10, 48, 12, 48, 340, 9, 48, 1,
		48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 48, 5, 48, 350, 8, 48,
		10, 48, 12, 48, 353, 9, 48, 1, 48, 1, 48, 1, 48, 3, 48, 358, 8, 48, 1,
		49, 1, 49, 3, 49, 362, 8, 49, 1, 50, 3, 50, 365, 8, 50, 1, 51, 3, 51, 368,
		8, 51, 1, 52, 3, 52, 371, 8, 52, 1, 53, 1, 53, 1, 53, 1, 54, 4, 54, 377,
		8, 54, 11, 54, 12, 54, 378, 1, 55, 1, 55, 3, 55, 383, 8, 55, 1, 55, 3,
		55, 386, 8, 55, 1, 55, 1, 55, 3, 55, 390, 8, 55, 1, 56, 1, 56, 1, 56, 3,
		56, 395, 8, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58, 1, 58,
		1, 59, 1, 59, 2, 338, 351, 0, 60, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6,
		13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31,
		16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49,
		25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67,
		34, 69, 35, 71, 36, 73, 0, 75, 0, 77, 0, 79, 0, 81, 0, 83, 0, 85, 0, 87,
		0, 89, 0, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0, 107,
		0, 109, 0, 111, 0, 113, 0, 115, 0, 117, 0, 119, 0, 1, 0, 18, 3, 0, 9, 10,
		13, 13, 32, 32, 2, 0, 66, 66, 98, 98, 2, 0, 82, 82, 114, 114, 3, 0, 65,
		90, 95, 95, 97, 122, 1, 0, 49, 57, 1, 0, 48, 57, 1, 0, 48, 55, 3, 0, 48,
		57, 65, 70, 97, 102, 1, 0, 48, 49, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43,
		45, 45, 5, 0, 0, 9, 11, 12, 14, 38, 40, 91, 93, 127, 5, 0, 0, 9, 11, 12,
		14, 33, 35, 91, 93, 127, 2, 0, 0, 91, 93, 127, 1, 0, 0, 127, 2, 0, 9, 9,
		32, 32, 8, 0, 34, 34, 47, 47, 92, 92, 98, 98, 102, 102, 110, 110, 114,
		114, 116, 116, 3, 0, 0, 31, 34, 34, 92, 92, 417, 0, 1, 1, 0, 0, 0, 0, 3,
		1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11,
		1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0,
		19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0,
		0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0,
		0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0,
		0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1,
		0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57,
		1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0,
		65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0,
		1, 121, 1, 0, 0, 0, 3, 123, 1, 0, 0, 0, 5, 125, 1, 0, 0, 0, 7, 127, 1,
		0, 0, 0, 9, 132, 1, 0, 0, 0, 11, 138, 1, 0, 0, 0, 13, 142, 1, 0, 0, 0,
		15, 144, 1, 0, 0, 0, 17, 146, 1, 0, 0, 0, 19, 148, 1, 0, 0, 0, 21, 150,
		1, 0, 0, 0, 23, 152, 1, 0, 0, 0, 25, 154, 1, 0, 0, 0, 27, 156, 1, 0, 0,
		0, 29, 158, 1, 0, 0, 0, 31, 160, 1, 0, 0, 0, 33, 163, 1, 0, 0, 0, 35, 166,
		1, 0, 0, 0, 37, 169, 1, 0, 0, 0, 39, 172, 1, 0, 0, 0, 41, 174, 1, 0, 0,
		0, 43, 177, 1, 0, 0, 0, 45, 179, 1, 0, 0, 0, 47, 182, 1, 0, 0, 0, 49, 184,
		1, 0, 0, 0, 51, 186, 1, 0, 0, 0, 53, 188, 1, 0, 0, 0, 55, 192, 1, 0, 0,
		0, 57, 197, 1, 0, 0, 0, 59, 203, 1, 0, 0, 0, 61, 224, 1, 0, 0, 0, 63, 229,
		1, 0, 0, 0, 65, 231, 1, 0, 0, 0, 67, 246, 1, 0, 0, 0, 69, 252, 1, 0, 0,
		0, 71, 261, 1, 0, 0, 0, 73, 264, 1, 0, 0, 0, 75, 266, 1, 0, 0, 0, 77, 268,
		1, 0, 0, 0, 79, 270, 1, 0, 0, 0, 81, 272, 1, 0, 0, 0, 83, 274, 1, 0, 0,
		0, 85, 283, 1, 0, 0, 0, 87, 287, 1, 0, 0, 0, 89, 292, 1, 0, 0, 0, 91, 296,
		1, 0, 0, 0, 93, 302, 1, 0, 0, 0, 95, 329, 1, 0, 0, 0, 97, 357, 1, 0, 0,
		0, 99, 361, 1, 0, 0, 0, 101, 364, 1, 0, 0, 0, 103, 367, 1, 0, 0, 0, 105,
		370, 1, 0, 0, 0, 107, 372, 1, 0, 0, 0, 109, 376, 1, 0, 0, 0, 111, 380,
		1, 0, 0, 0, 113, 391, 1, 0, 0, 0, 115, 396, 1, 0, 0, 0, 117, 402, 1, 0,
		0, 0, 119, 404, 1, 0, 0, 0, 121, 122, 5, 37, 0, 0, 122, 2, 1, 0, 0, 0,
		123, 124, 5, 33, 0, 0, 124, 4, 1, 0, 0, 0, 125, 126, 5, 48, 0, 0, 126,
		6, 1, 0, 0, 0, 127, 128, 5, 116, 0, 0, 128, 129, 5, 114, 0, 0, 129, 130,
		5, 117, 0, 0, 130, 131, 5, 101, 0, 0, 131, 8, 1, 0, 0, 0, 132, 133, 5,
		102, 0, 0, 133, 134, 5, 97, 0, 0, 134, 135, 5, 108, 0, 0, 135, 136, 5,
		115, 0, 0, 136, 137, 5, 101, 0, 0, 137, 10, 1, 0, 0, 0, 138, 139, 5, 110,
		0, 0, 139, 140, 5, 105, 0, 0, 140, 141, 5, 108, 0, 0, 141, 12, 1, 0, 0,
		0, 142, 143, 5, 40, 0, 0, 143, 14, 1, 0, 0, 0, 144, 145, 5, 41, 0, 0, 145,
		16, 1, 0, 0, 0, 146, 147, 5, 123, 0, 0, 147, 18, 1, 0, 0, 0, 148, 149,
		5, 125, 0, 0, 149, 20, 1, 0, 0, 0, 150, 151, 5, 91, 0, 0, 151, 22, 1, 0,
		0, 0, 152, 153, 5, 93, 0, 0, 153, 24, 1, 0, 0, 0, 154, 155, 5, 44, 0, 0,
		155, 26, 1, 0, 0, 0, 156, 157, 5, 58, 0, 0, 157, 28, 1, 0, 0, 0, 158, 159,
		5, 46, 0, 0, 159, 30, 1, 0, 0, 0, 160, 161, 5, 124, 0, 0, 161, 162, 5,
		124, 0, 0, 162, 32, 1, 0, 0, 0, 163, 164, 5, 38, 0, 0, 164, 165, 5, 38,
		0, 0, 165, 34, 1, 0, 0, 0, 166, 167, 5, 61, 0, 0, 167, 168, 5, 61, 0, 0,
		168, 36, 1, 0, 0, 0, 169, 170, 5, 33, 0, 0, 170, 171, 5, 61, 0, 0, 171,
		38, 1, 0, 0, 0, 172, 173, 5, 60, 0, 0, 173, 40, 1, 0, 0, 0, 174, 175, 5,
		60, 0, 0, 175, 176, 5, 61, 0, 0, 176, 42, 1, 0, 0, 0, 177, 178, 5, 62,
		0, 0, 178, 44, 1, 0, 0, 0, 179, 180, 5, 62, 0, 0, 180, 181, 5, 61, 0, 0,
		181, 46, 1, 0, 0, 0, 182, 183, 5, 47, 0, 0, 183, 48, 1, 0, 0, 0, 184, 185,
		5, 43, 0, 0, 185, 50, 1, 0, 0, 0, 186, 187, 5, 45, 0, 0, 187, 52, 1, 0,
		0, 0, 188, 189, 5, 42, 0, 0, 189, 54, 1, 0, 0, 0, 190, 193, 3, 109, 54,
		0, 191, 193, 3, 111, 55, 0, 192, 190, 1, 0, 0, 0, 192, 191, 1, 0, 0, 0,
		193, 194, 1, 0, 0, 0, 194, 195, 6, 27, 0, 0, 195, 56, 1, 0, 0, 0, 196,
		198, 7, 0, 0, 0, 197, 196, 1, 0, 0, 0, 198, 199, 1, 0, 0, 0, 199, 197,
		1, 0, 0, 0, 199, 200, 1, 0, 0, 0, 200, 201, 1, 0, 0, 0, 201, 202, 6, 28,
		0, 0, 202, 58, 1, 0, 0, 0, 203, 208, 3, 73, 36, 0, 204, 207, 3, 73, 36,
		0, 205, 207, 3, 77, 38, 0, 206, 204, 1, 0, 0, 0, 206, 205, 1, 0, 0, 0,
		207, 210, 1, 0, 0, 0, 208, 206, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209,
		60, 1, 0, 0, 0, 210, 208, 1, 0, 0, 0, 211, 212, 3, 17, 8, 0, 212, 218,
		3, 59, 29, 0, 213, 214, 3, 29, 14, 0, 214, 215, 3, 59, 29, 0, 215, 217,
		1, 0, 0, 0, 216, 213, 1, 0, 0, 0, 217, 220, 1, 0, 0, 0, 218, 216, 1, 0,
		0, 0, 218, 219, 1, 0, 0, 0, 219, 221, 1, 0, 0, 0, 220, 218, 1, 0, 0, 0,
		221, 222, 3, 19, 9, 0, 222, 225, 1, 0, 0, 0, 223, 225, 3, 59, 29, 0, 224,
		211, 1, 0, 0, 0, 224, 223, 1, 0, 0, 0, 225, 62, 1, 0, 0, 0, 226, 230, 3,
		65, 32, 0, 227, 230, 3, 95, 47, 0, 228, 230, 3, 97, 48, 0, 229, 226, 1,
		0, 0, 0, 229, 227, 1, 0, 0, 0, 229, 228, 1, 0, 0, 0, 230, 64, 1, 0, 0,
		0, 231, 236, 5, 34, 0, 0, 232, 235, 3, 113, 56, 0, 233, 235, 3, 117, 58,
		0, 234, 232, 1, 0, 0, 0, 234, 233, 1, 0, 0, 0, 235, 238, 1, 0, 0, 0, 236,
		234, 1, 0, 0, 0, 236, 237, 1, 0, 0, 0, 237, 239, 1, 0, 0, 0, 238, 236,
		1, 0, 0, 0, 239, 240, 5, 34, 0, 0, 240, 66, 1, 0, 0, 0, 241, 247, 7, 1,
		0, 0, 242, 243, 7, 1, 0, 0, 243, 247, 7, 2, 0, 0, 244, 245, 7, 2, 0, 0,
		245, 247, 7, 1, 0, 0, 246, 241, 1, 0, 0, 0, 246, 242, 1, 0, 0, 0, 246,
		244, 1, 0, 0, 0, 247, 250, 1, 0, 0, 0, 248, 251, 3, 95, 47, 0, 249, 251,
		3, 97, 48, 0, 250, 248, 1, 0, 0, 0, 250, 249, 1, 0, 0, 0, 251, 68, 1, 0,
		0, 0, 252, 256, 3, 75, 37, 0, 253, 255, 3, 77, 38, 0, 254, 253, 1, 0, 0,
		0, 255, 258, 1, 0, 0, 0, 256, 254, 1, 0, 0, 0, 256, 257, 1, 0, 0, 0, 257,
		70, 1, 0, 0, 0, 258, 256, 1, 0, 0, 0, 259, 262, 3, 85, 42, 0, 260, 262,
		3, 87, 43, 0, 261, 259, 1, 0, 0, 0, 261, 260, 1, 0, 0, 0, 262, 72, 1, 0,
		0, 0, 263, 265, 7, 3, 0, 0, 264, 263, 1, 0, 0, 0, 265, 74, 1, 0, 0, 0,
		266, 267, 7, 4, 0, 0, 267, 76, 1, 0, 0, 0, 268, 269, 7, 5, 0, 0, 269, 78,
		1, 0, 0, 0, 270, 271, 7, 6, 0, 0, 271, 80, 1, 0, 0, 0, 272, 273, 7, 7,
		0, 0, 273, 82, 1, 0, 0, 0, 274, 275, 7, 8, 0, 0, 275, 84, 1, 0, 0, 0, 276,
		278, 3, 89, 44, 0, 277, 276, 1, 0, 0, 0, 277, 278, 1, 0, 0, 0, 278, 279,
		1, 0, 0, 0, 279, 284, 3, 91, 45, 0, 280, 281, 3, 89, 44, 0, 281, 282, 5,
		46, 0, 0, 282, 284, 1, 0, 0, 0, 283, 277, 1, 0, 0, 0, 283, 280, 1, 0, 0,
		0, 284, 86, 1, 0, 0, 0, 285, 288, 3, 89, 44, 0, 286, 288, 3, 85, 42, 0,
		287, 285, 1, 0, 0, 0, 287, 286, 1, 0, 0, 0, 288, 289, 1, 0, 0, 0, 289,
		290, 3, 93, 46, 0, 290, 88, 1, 0, 0, 0, 291, 293, 3, 77, 38, 0, 292, 291,
		1, 0, 0, 0, 293, 294, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0, 294, 295, 1, 0,
		0, 0, 295, 90, 1, 0, 0, 0, 296, 298, 5, 46, 0, 0, 297, 299, 3, 77, 38,
		0, 298, 297, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0, 300, 298, 1, 0, 0, 0, 300,
		301, 1, 0, 0, 0, 301, 92, 1, 0, 0, 0, 302, 304, 7, 9, 0, 0, 303, 305, 7,
		10, 0, 0, 304, 303, 1, 0, 0, 0, 304, 305, 1, 0, 0, 0, 305, 307, 1, 0, 0,
		0, 306, 308, 3, 77, 38, 0, 307, 306, 1, 0, 0, 0, 308, 309, 1, 0, 0, 0,
		309, 307, 1, 0, 0, 0, 309, 310, 1, 0, 0, 0, 310, 94, 1, 0, 0, 0, 311, 316,
		5, 39, 0, 0, 312, 315, 3, 101, 50, 0, 313, 315, 3, 107, 53, 0, 314, 312,
		1, 0, 0, 0, 314, 313, 1, 0, 0, 0, 315, 318, 1, 0, 0, 0, 316, 314, 1, 0,
		0, 0, 316, 317, 1, 0, 0, 0, 317, 319, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0,
		319, 330, 5, 39, 0, 0, 320, 325, 5, 34, 0, 0, 321, 324, 3, 103, 51, 0,
		322, 324, 3, 107, 53, 0, 323, 321, 1, 0, 0, 0, 323, 322, 1, 0, 0, 0, 324,
		327, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 325, 326, 1, 0, 0, 0, 326, 328,
		1, 0, 0, 0, 327, 325, 1, 0, 0, 0, 328, 330, 5, 34, 0, 0, 329, 311, 1, 0,
		0, 0, 329, 320, 1, 0, 0, 0, 330, 96, 1, 0, 0, 0, 331, 332, 5, 39, 0, 0,
		332, 333, 5, 39, 0, 0, 333, 334, 5, 39, 0, 0, 334, 338, 1, 0, 0, 0, 335,
		337, 3, 99, 49, 0, 336, 335, 1, 0, 0, 0, 337, 340, 1, 0, 0, 0, 338, 339,
		1, 0, 0, 0, 338, 336, 1, 0, 0, 0, 339, 341, 1, 0, 0, 0, 340, 338, 1, 0,
		0, 0, 341, 342, 5, 39, 0, 0, 342, 343, 5, 39, 0, 0, 343, 358, 5, 39, 0,
		0, 344, 345, 5, 34, 0, 0, 345, 346, 5, 34, 0, 0, 346, 347, 5, 34, 0, 0,
		347, 351, 1, 0, 0, 0, 348, 350, 3, 99, 49, 0, 349, 348, 1, 0, 0, 0, 350,
		353, 1, 0, 0, 0, 351, 352, 1, 0, 0, 0, 351, 349, 1, 0, 0, 0, 352, 354,
		1, 0, 0, 0, 353, 351, 1, 0, 0, 0, 354, 355, 5, 34, 0, 0, 355, 356, 5, 34,
		0, 0, 356, 358, 5, 34, 0, 0, 357, 331, 1, 0, 0, 0, 357, 344, 1, 0, 0, 0,
		358, 98, 1, 0, 0, 0, 359, 362, 3, 105, 52, 0, 360, 362, 3, 107, 53, 0,
		361, 359, 1, 0, 0, 0, 361, 360, 1, 0, 0, 0, 362, 100, 1, 0, 0, 0, 363,
		365, 7, 11, 0, 0, 364, 363, 1, 0, 0, 0, 365, 102, 1, 0, 0, 0, 366, 368,
		7, 12, 0, 0, 367, 366, 1, 0, 0, 0, 368, 104, 1, 0, 0, 0, 369, 371, 7, 13,
		0, 0, 370, 369, 1, 0, 0, 0, 371, 106, 1, 0, 0, 0, 372, 373, 5, 92, 0, 0,
		373, 374, 7, 14, 0, 0, 374, 108, 1, 0, 0, 0, 375, 377, 7, 15, 0, 0, 376,
		375, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 378, 376, 1, 0, 0, 0, 378, 379,
		1, 0, 0, 0, 379, 110, 1, 0, 0, 0, 380, 382, 5, 92, 0, 0, 381, 383, 3, 109,
		54, 0, 382, 381, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 389, 1, 0, 0, 0,
		384, 386, 5, 13, 0, 0, 385, 384, 1, 0, 0, 0, 385, 386, 1, 0, 0, 0, 386,
		387, 1, 0, 0, 0, 387, 390, 5, 10, 0, 0, 388, 390, 2, 12, 13, 0, 389, 385,
		1, 0, 0, 0, 389, 388, 1, 0, 0, 0, 390, 112, 1, 0, 0, 0, 391, 394, 5, 92,
		0, 0, 392, 395, 7, 16, 0, 0, 393, 395, 3, 115, 57, 0, 394, 392, 1, 0, 0,
		0, 394, 393, 1, 0, 0, 0, 395, 114, 1, 0, 0, 0, 396, 397, 5, 117, 0, 0,
		397, 398, 3, 119, 59, 0, 398, 399, 3, 119, 59, 0, 399, 400, 3, 119, 59,
		0, 400, 401, 3, 119, 59, 0, 401, 116, 1, 0, 0, 0, 402, 403, 8, 17, 0, 0,
		403, 118, 1, 0, 0, 0, 404, 405, 7, 7, 0, 0, 405, 120, 1, 0, 0, 0, 39, 0,
		192, 199, 206, 208, 218, 224, 229, 234, 236, 246, 250, 256, 261, 264, 277,
		283, 287, 294, 300, 304, 309, 314, 316, 323, 325, 329, 338, 351, 357, 361,
		364, 367, 370, 378, 382, 385, 389, 394, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// valuateLexerInit initializes any static state used to implement valuateLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewvaluateLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ValuateLexerInit() {
	staticData := &valuatelexerLexerStaticData
	staticData.once.Do(valuatelexerLexerInit)
}

// NewvaluateLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewvaluateLexer(input antlr.CharStream) *valuateLexer {
	ValuateLexerInit()
	l := new(valuateLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &valuatelexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "valuate.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// valuateLexer tokens.
const (
	valuateLexerT__0              = 1
	valuateLexerT__1              = 2
	valuateLexerT__2              = 3
	valuateLexerTRUE              = 4
	valuateLexerFALSE             = 5
	valuateLexerNIL_LIT           = 6
	valuateLexerLP                = 7
	valuateLexerRP                = 8
	valuateLexerL_CURLY           = 9
	valuateLexerR_CURLY           = 10
	valuateLexerL_BRACKET         = 11
	valuateLexerR_BRACKET         = 12
	valuateLexerCOMMA             = 13
	valuateLexerCOLON             = 14
	valuateLexerDOT               = 15
	valuateLexerLOGICAL_OR        = 16
	valuateLexerLOGICAL_AND       = 17
	valuateLexerEQUALS            = 18
	valuateLexerNOT_EQUALS        = 19
	valuateLexerLESS              = 20
	valuateLexerLESS_OR_EQUALS    = 21
	valuateLexerGREATER           = 22
	valuateLexerGREATER_OR_EQUALS = 23
	valuateLexerDIV               = 24
	valuateLexerPLUS              = 25
	valuateLexerMINUS             = 26
	valuateLexerSTAR              = 27
	valuateLexerSKIP_             = 28
	valuateLexerWHITESPACE        = 29
	valuateLexerIDENTIFIER        = 30
	valuateLexerVAR_ID            = 31
	valuateLexerSTRING            = 32
	valuateLexerSTRING_LITERAL    = 33
	valuateLexerBYTES_LITERAL     = 34
	valuateLexerDECIMAL_LIT       = 35
	valuateLexerFLOAT_NUMBER      = 36
)
